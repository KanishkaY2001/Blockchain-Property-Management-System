{
  "contractName": "PropertyAuction",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PlaceBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ClaimProperty",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ClaimDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GetOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ClaimDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ClaimProperty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GetWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PlaceBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PropertyAuction.sol\":\"PropertyAuction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PropertyAuction.sol\":{\"keccak256\":\"0xbe7d3e9f1dc1194c492732b4f50917bf0f964286561f9201abd98ae3b591b317\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5727d1244aeec347a00ab6b435b6e38ff7884d6ae4dce70d05b4995e92398f6e\",\"dweb:/ipfs/QmbgpQFGaMgAfqS5qu52TiRP9yfEnBiuWYgZg1aZFUenv9\"]},\"project:/contracts/PropertyOracle.sol\":{\"keccak256\":\"0x1fdaa0b35964ca7c7886b9c44198a068e7a6db9e4a04fcd26bc7ff83043271b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://67b5d11559f0a542dc39c667b12224e31d4ebd57cafdfda5c8d09e9dc40d383a\",\"dweb:/ipfs/QmS9CPZZz8G7496BXN9btkr5QKtNEDnVYzNCHej6Yurbdv\"]},\"project:/contracts/PropertyToken.sol\":{\"keccak256\":\"0xf047bb1f94177450aac8a1b97ec25418289ad87b3872f49b1839c7ebf3839e59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f36a98879f6c1a027b102ac90492f7ff5f6839a44318912216b58e93aea48342\",\"dweb:/ipfs/QmZCLuL7rqazP6jn8A5LywRHHyNPpL1PLCNQqmvCqPxGUJ\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x5c3501c1b70fcfc64417e9da5cc6a3597191baa354781e508e1e14cc0e50a038\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://899c87a849a94c848818d0afede6961d2c87665af1dd23a5c983e78981a65691\",\"dweb:/ipfs/QmUeFDffQRDmX87FX3MRxN3bmpUxDTWpWLwPJzeAJ3yF6H\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"project:/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101fa806100206000396000f3fe60806040526004361061004a5760003560e01c806305be0cd11461004f5780630706ee181461007a5780630ae50a39146100a55780639f6c4e6c146100d0578063dc201dc2146100fb575b600080fd5b34801561005b57600080fd5b50610064610119565b604051610071919061014d565b60405180910390f35b34801561008657600080fd5b5061008f61011e565b60405161009c919061014d565b60405180910390f35b3480156100b157600080fd5b506100ba610123565b6040516100c791906101a9565b60405180910390f35b3480156100dc57600080fd5b506100e5610128565b6040516100f291906101a9565b60405180910390f35b61010361012d565b604051610110919061014d565b60405180910390f35b600090565b600090565b600090565b600090565b600090565b60008115159050919050565b61014781610132565b82525050565b6000602082019050610162600083018461013e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019382610168565b9050919050565b6101a381610188565b82525050565b60006020820190506101be600083018461019a565b9291505056fea2646970667358221220ef5f32c9f667e0221facb687ee489cf6af0bde16ef84a8afc0c922724aa086ba64736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c806305be0cd11461004f5780630706ee181461007a5780630ae50a39146100a55780639f6c4e6c146100d0578063dc201dc2146100fb575b600080fd5b34801561005b57600080fd5b50610064610119565b604051610071919061014d565b60405180910390f35b34801561008657600080fd5b5061008f61011e565b60405161009c919061014d565b60405180910390f35b3480156100b157600080fd5b506100ba610123565b6040516100c791906101a9565b60405180910390f35b3480156100dc57600080fd5b506100e5610128565b6040516100f291906101a9565b60405180910390f35b61010361012d565b604051610110919061014d565b60405180910390f35b600090565b600090565b600090565b600090565b600090565b60008115159050919050565b61014781610132565b82525050565b6000602082019050610162600083018461013e565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061019382610168565b9050919050565b6101a381610188565b82525050565b60006020820190506101be600083018461019a565b9291505056fea2646970667358221220ef5f32c9f667e0221facb687ee489cf6af0bde16ef84a8afc0c922724aa086ba64736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1017:13",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "49:48:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "59:32:13",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "84:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "77:6:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "77:13:13"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "70:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "70:21:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "59:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "31:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "41:7:13",
                "type": ""
              }
            ],
            "src": "7:90:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "162:50:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "179:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "199:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "184:14:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "184:21:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "172:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "172:34:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "172:34:13"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "150:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "157:3:13",
                "type": ""
              }
            ],
            "src": "103:109:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "310:118:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "320:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "332:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "343:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "320:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "394:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "407:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "418:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "356:37:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:65:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:65:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "282:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "294:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "305:4:13",
                "type": ""
              }
            ],
            "src": "218:210:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:81:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "489:65:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "504:5:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:42:13",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "500:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "500:54:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "489:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "461:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "471:7:13",
                "type": ""
              }
            ],
            "src": "434:126:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:51:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "621:35:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "650:5:13"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "632:17:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "632:24:13"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "621:7:13"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "593:5:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "603:7:13",
                "type": ""
              }
            ],
            "src": "566:96:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:53:13",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "750:3:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "773:5:13"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "755:17:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "755:24:13"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:37:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:37:13"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "721:5:13",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "728:3:13",
                "type": ""
              }
            ],
            "src": "668:118:13"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:124:13",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:13",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:13"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:13",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:13"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:13"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "980:6:13"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "993:9:13"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1004:1:13",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "989:3:13"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:17:13"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "936:43:13"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "936:71:13"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "936:71:13"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "862:9:13",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "874:6:13",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "885:4:13",
                "type": ""
              }
            ],
            "src": "792:222:13"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 13,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "87:733:0:-:0;;;301:45;;;;;;;;;;87:733;;;;;;",
  "deployedSourceMap": "87:733:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;448:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;541:86;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;731:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;637:88;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;352:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;448:87;490:12;448:87;:::o;541:86::-;582:12;541:86;:::o;731:87::-;773:12;731:87;:::o;637:88::-;680:12;637:88;:::o;352:90::-;397:12;352:90;:::o;7::13:-;41:7;84:5;77:13;70:21;59:32;;7:90;;;:::o;103:109::-;184:21;199:5;184:21;:::i;:::-;179:3;172:34;103:109;;:::o;218:210::-;305:4;343:2;332:9;328:18;320:26;;356:65;418:1;407:9;403:17;394:6;356:65;:::i;:::-;218:210;;;;:::o;434:126::-;471:7;511:42;504:5;500:54;489:65;;434:126;;;:::o;566:96::-;603:7;632:24;650:5;632:24;:::i;:::-;621:35;;566:96;;;:::o;668:118::-;755:24;773:5;755:24;:::i;:::-;750:3;743:37;668:118;;:::o;792:222::-;885:4;923:2;912:9;908:18;900:26;;936:71;1004:1;993:9;989:17;980:6;936:71;:::i;:::-;792:222;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"./PropertyToken.sol\";\n\ncontract PropertyAuction {\n\n    // Auction details \n    /*\n        To Implement\n    */\n\n    // property seller\n    /*\n        To Implement\n    */\n\n    // Bidding details\n    /*\n        To Implement\n    */\n    \n    constructor() {\n        // To Implement\n    }\n\n    function PlaceBid() external payable returns(bool success) {\n        // To Implement\n    }\n\n    function ClaimProperty() external returns(bool success) {\n        // To Implement\n    }\n\n    function ClaimDeposit() external returns(bool success) {\n        // To Implement\n    }\n    \n    function GetWinner() external view returns(address addr) {\n        // To Implement\n    }\n\n    function GetOwner() external view returns(address addr) {\n        // To Implement\n    }\n}",
  "sourcePath": "/home/kanishka/Documents/GitHub/COMP6452-Blockchain-Boogaloo/contracts/PropertyAuction.sol",
  "ast": {
    "absolutePath": "project:/contracts/PropertyAuction.sol",
    "exportedSymbols": {
      "Address": [
        1620
      ],
      "Context": [
        1642
      ],
      "ERC165": [
        1892
      ],
      "ERC721": [
        1039
      ],
      "ERC721URIStorage": [
        1298
      ],
      "IERC165": [
        1904
      ],
      "IERC721": [
        1155
      ],
      "IERC721Metadata": [
        1325
      ],
      "IERC721Receiver": [
        1173
      ],
      "PropertyAuction": [
        37
      ],
      "PropertyOracle": [
        98
      ],
      "PropertyToken": [
        172
      ],
      "Strings": [
        1868
      ]
    },
    "id": 38,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "project:/contracts/PropertyToken.sol",
        "file": "./PropertyToken.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 38,
        "sourceUnit": 173,
        "src": "56:29:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PropertyAuction",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 37,
        "linearizedBaseContracts": [
          37
        ],
        "name": "PropertyAuction",
        "nameLocation": "96:15:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5,
              "nodeType": "Block",
              "src": "315:31:0",
              "statements": []
            },
            "id": 6,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:2:0"
            },
            "returnParameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "315:0:0"
            },
            "scope": 37,
            "src": "301:45:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11,
              "nodeType": "Block",
              "src": "411:31:0",
              "statements": []
            },
            "functionSelector": "dc201dc2",
            "id": 12,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "PlaceBid",
            "nameLocation": "361:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "369:2:0"
            },
            "returnParameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "402:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 12,
                  "src": "397:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "397:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "396:14:0"
            },
            "scope": 37,
            "src": "352:90:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "504:31:0",
              "statements": []
            },
            "functionSelector": "05be0cd1",
            "id": 18,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ClaimProperty",
            "nameLocation": "457:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "470:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "495:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 18,
                  "src": "490:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "489:14:0"
            },
            "scope": 37,
            "src": "448:87:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23,
              "nodeType": "Block",
              "src": "596:31:0",
              "statements": []
            },
            "functionSelector": "0706ee18",
            "id": 24,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ClaimDeposit",
            "nameLocation": "550:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "562:2:0"
            },
            "returnParameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "587:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "582:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:14:0"
            },
            "scope": 37,
            "src": "541:86:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "694:31:0",
              "statements": []
            },
            "functionSelector": "9f6c4e6c",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetWinner",
            "nameLocation": "646:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 25,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "655:2:0"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "688:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 30,
                  "src": "680:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "679:14:0"
            },
            "scope": 37,
            "src": "637:88:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "787:31:0",
              "statements": []
            },
            "functionSelector": "0ae50a39",
            "id": 36,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetOwner",
            "nameLocation": "740:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "748:2:0"
            },
            "returnParameters": {
              "id": 34,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "781:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 36,
                  "src": "773:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "773:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "772:14:0"
            },
            "scope": 37,
            "src": "731:87:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 38,
        "src": "87:733:0",
        "usedErrors": []
      }
    ],
    "src": "32:788:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-05T06:36:53.913Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}